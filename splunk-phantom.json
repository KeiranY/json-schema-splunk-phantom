{
    "$schema": "http://json-schema.org/schema",
    "type": "object",
    "required": [
        "appid",
        "name",
        "description",
        "type",
        "main_module",
        "app_version",
        "product_vendor",
        "product_name",
        "product_version_regex",
        "publisher",
        "package_name",
        "license",
        "configuration",
        "actions"
    ],
    "defaultSnippets": [
        {
            "label": "New App",
            "description": "Template for a new Splunk Phantom App",
            "body": {
                "appid": "TODO: https://www.uuidgenerator.net/guid",
                "name": "$1",
                "description": "$2",
                "type": "$3",
                "app_version": "1.0",
                "main_module": "$1_connector.py",
                "product_vendor": "$4",
                "product_name": "$4",
                "product_version_regex": ".*",
                "publisher": "$5",
                "package_name": "$1_ph",
                "license": "$6",
                "configuration": {},
                "actions": []
            }
        }
    ],
    "definitions": {
        "generic_dependancies": {
            "type": "object",
            "properties": {
                "pypi": {
                    "description": "A list of modules that need to be installed for the app to work properly. The name to use as a parameter for the pip install is the [module_name] command.",
                    "type": "array"
                },
                "wheel": {
                    "description": "Use wheel to install app dependencies without direct connectivity to the internet. However, all Splunk Phantom apps have this capability. Splunk Phantom runs pip with the --no-deps parameter during wheel file installation. Each item in the list is a dictionary with the following keys:",
                    "type": "array"
                }
            }
        },
        "data_type": {
            "description": "The type of variable.",
            "type": "string",
            "enum": [
                "string",
                "password",
                "numeric",
                "boolean",
                "ph"
            ]
        }
    },
    "properties": {
        "appid": {
            "description": "The ID of the app for unique identification. This ID is in GUID/UUID version 4 format. It can be generated by easily found applications for the required platform. These applications include: uuidgen for linux, guidgen.exe on windows, or www.guidgenerator.com on the web.",
            "type": "string",
            "maxLength": 36,
            "minLength": 36,
            "pattern": "^([0-9a-fA-F]){8}(-([0-9a-fA-F]){4}){3}-([0-9a-fA-F]){12}$"
        },
        "name": {
            "description": "This is the name of the app.",
            "type": "string"
        },
        "description": {
            "description": "This is a more verbose description of the app. This is used to display a description of the app in the user interface, and also for automatically generated documentation on an app.",
            "type": "string"
        },
        "type": {
            "description": "This is the app type. The type is used to group apps at a level higher than the product_vendor name. Some of the types currently defined by Splunk Phantom apps include siem, email, endpoint, firewall, forensic, information, investigative, network access control, reputation, sandbox, threat intel, ticketing, virtualization and generic.",
            "type": "string"
        },
        "main_module": {
            "description": "This is the file name containing the module with the entry point code. It usually contains the action implementations for this app. This file is loaded when an action that this app supports is run. The Python code is located in the current app's directory.",
            "type": "string"
        },
        "app_version": {
            "description": "This is the app version. There may be multiple versions of an app on a given system in order to support different versions of a vendor/product combination. Versions start at 1.0.",
            "type": "string"
        },
        "pip_dependancies": {
            "$ref": "#/definitions/generic_dependancies",
            "description": "The platform allows the app author to specify pip dependencies that need to be installed on the OVA for the app to properly work."
        },
        "pip3_dependancies": {
            "$ref": "#/definitions/generic_dependancies",
            "description": "Use this key for specifying dependencies that you want installed when the app is running in python3. If this key is present, pip_dependencies is ignored if the app is running in python3. If this key is not present, but pip_dependencies is, that information will be used for both python2 and python3."
        },
        "min_phantom_version": {
            "description": "se this key to specify the minimum Splunk Phantom version that the app supports. The platform will validate the Splunk Phantom version during app installation and fail if the minimum criteria is not met.",
            "type": "string"
        },
        "product_vendor": {
            "description": "This is the vendor associated with the product that this app supports. For example, ReversingLabs, Cisco, IBM, FireEye.",
            "type": "string"
        },
        "product_name": {
            "description": "This is the name of the product that this app supports.",
            "type": "string"
        },
        "product_version_regex": {
            "description": "This is the version of the product that this app supports integration with. It is a regex and is rendered by the platform in the app documentation. The app will require to code extracting the version from the 3rd party device or service that it integrates with and run any required validation. A '.*' represents all versions.",
            "type": "string",
            "format": "regex",
            "default": ".*"
        },
        "publisher": {
            "description": "This is your name, as the publisher and creator of this app. This is your company name if you are a vendor, or your own name if you are an individual.",
            "type": "string"
        },
        "package_name": {
            "description": "This is the package name that will be used to install the app through the yum/rpm commands.",
            "type": "string"
        },
        "license": {
            "description": "This is the license that the app is released under. This is the license string that is to be displayed in the yum/rpm info commands output.",
            "type": "string"
        },
        "consolidate_widgets": {
            "description": "If false, the platform will render every action in its own widget, or if true, a single widget will contain all actions consolidated.",
            "type": "boolean"
        },
        "url": {
            "description": "This is the URL associated with the app. It is a landing page that gives brief information about the app or extra documentation.",
            "type": "string",
            "format": "uri"
        },
        "logo": {
            "description": "This is the name of the icon file that is rendered at multiple places in the product in Light Theme. It has to be in the app folder with the rest of the files. SVG, PNG and JPEG files are supported, but SVGs are preferred. The logo must have a transparent background and is represented by the product being integrated. A product icon is preferred over the vendor icon.",
            "type": "string"
        },
        "logo_dark": {
            "description": "This is the icon that is rendered in Dark Theme.",
            "type": "string"
        },
        "python_version": {
            "description": "Defines the Python version used to run the app's actions. This value is either \"2.7\" or \"3\". If not specified, \"2.7\" is assumed.",
            "type": "string",
            "default": "2.7",
            "enum": [
                "2.7",
                "3"
            ]
        },
        "actions": {
            "description": "Detailed specification of the actions that this app supports. This defines the input parameters that the app needs for each action and the output that they generate.",
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "action",
                    "identifier",
                    "description",
                    "type",
                    "read_only"
                ],
                "properties": {
                    "action": {
                        "description": "The name of the action. Action names are high level primitives that are used throughout the Splunk Phantom platform. They are used in playbooks when an action is requested and in the UI when an action is run.",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "A unique identifier for this action. The action key is mapped to this identifier and that is what is passed down to the app. The app code then uses this unique identifier to determine which action to run. The identifier is maximum five characters.",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of this variable. This value is used as a label that is displayed on the UI next to the input control. Keep the description brief, preferably a single line, since it is displayed on the UI. If you want to explain things in more detail regarding a parameter, or the action in general, use the verbose key.",
                        "type": "string"
                    },
                    "verbose": {
                        "description": "Use this key to fill in any information that you want to document about the action. This text supports HTML formatting.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of action. This is used to organize actions into logical groups based on their purpose. The only test connectivity action uses the test type. The test type of actions are not displayed in the UI in the Run Action dialog.",
                        "type": "string",
                        "enum": [
                            "contain",
                            "correct",
                            "generic",
                            "investigate",
                            "test"
                        ]
                    },
                    "read_only": {
                        "description": "Indicates whether the action is \"read-only\", or in other words, non-destructive. Executing this action will have no adverse affect on the asset. This typically applies to information gathering actions that do not make any configuration changes to an asset.",
                        "type": "boolean"
                    },
                    "undo": {
                        "description": "The action that reverts this action.",
                        "type": "string"
                    },
                    "versions": {
                        "description": "Specifies which versions of the product that this action supports. This key contains a regular expression that is matched against a configured asset to find the app and action within that app that best supports a specific asset.",
                        "type": "string",
                        "pattern": "^N?(?:EQ|IN)\\(.*\\)$"
                    },
                    "parameters": {
                        "description": "List of parameters that are passed to this action. These parameters are typically specified in Splunk Phantom automation playbooks and pass through to the app when an action is run. The name of the key represents the parameter name.",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "required": ["data_type"],
                            "properties": {
                                "description": {
                                    "description": "A short description of this parameter. The description is shown in the user interface when running an action manually.",
                                    "type": "string"
                                },
                                "data_type": {
                                    "$ref": "#/definitions/data_type"
                                },
                                "contains": {
                                    "description": "Specifies what kind of content this field contains.",
                                    "type": "array"
                                },
                                "required": {
                                    "description": "Whether or not this parameter is mandatory for this action to function. If this parameter is not provided, the action fails.",
                                    "type": "boolean"
                                },
                                "primary": {
                                    "description": "Specifies if the action acts primarily on this parameter or not. It is used in conjunction with the contains field to display a list of contextual actions where the user clicks on a piece of data in the UI.",
                                    "type": "boolean"
                                },
                                "value_list": {
                                    "description": "To allow the user to choose from a pre-defined list of values displayed in a drop-down, specify them as a list. For example, [\"one\", \"two\", \"three\"]",
                                    "type": "array"
                                },
                                "default": {
                                    "description": "To set the default value of a variable in the UI, use this key. The user will be able to modify this value, so the app will need to validate it. This key also works in conjunction with value_list."
                                },
                                "order": {
                                    "description": "The order key, starting at 0, allows the app author to control the display order of the controls in the UI.",
                                    "type": "number"
                                },
                                "allow_list": {
                                    "description": "Use this key to specify if the parameter supports specifying multiple values as a comma separated string.",
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "lock": {
                        "description": "Defines a set of parameters that app authors can set to synchronize actions. A lock is represented by it's name. Multiple actions locking on the same name will be serialized even if the actions are from different apps. In the absence of a lock dictionary, the platform will synchronize the action using the asset as the lock name. So to disable synchronization for an action, the lock dictionary will require to be present and the 'enabled' key set to false.",
                        "type": "object",
                        "required": ["enabled"],
                        "properties": {
                            "enabled": {
                                "description": "Boolean value that specifies if the lock is enabled or not for this action.",
                                "type": "boolean"
                            },
                            "data_path": {
                                "description": "The name of the lock. Only valid if lock is enabled. This value can be one of three things. Either a data path that points to a parameter of the action for e.g. \"parameters.hash\" where 'hash' is one of the parameters of the action, or a data path that points to a config parameter for e.g. \"configuration.server\". At runtime the platform will read the value stored in these data paths and use it as a name of the lock. The third option that the app author can use is a constant string. I.e. any string that does not start with \"configuration.\" or \"parameters.\". The platform will use this value as is. In case the data_path is not specified, the asset will be used as the lock name.",
                                "type": "string"
                            },
                            "timeout": {
                                "description": "Specifies the number of seconds to wait to acquire the lock, before an error condition is reported.",
                                "type": "number"
                            }
                        }
                    },
                    "render": {
                        "description": "How output from this app will be displayed to the user within the Splunk Phantom product.",
                        "type": "object",
                        "required": ["type", "width", "height", "title"],
                        "properties": {
                            "type": {
                                "description": "This specifies the type of render function to use when displaying output from this app. Splunk Phantom supports a number of built in widgets that display data and also gives you the ability to define your own view to render data from your app in any form you want.",
                                "type": "string",
                                "enum": ["json", "table", "custom"],
                                "default": "table"
                            },
                            "width": {
                                "description": "Specifies the width, in columns, of the container that houses this content. The Investigation screen is 12 columns wide and widgets can be anywhere from one to six columns in width.",
                                "type": "number",
                                "maximum": 12,
                                "minimum": 0
                            },
                            "height": {
                                "description": "Specifies the height, in rows, of the container that houses this content. The height must be between 0 and 10.",
                                "type": "number",
                                "maximum": 10,
                                "minimum": 0
                            },
                            "view": {
                                "description": "Specifies the custom view to load when rendering data produced by this app. The format of this value is file.function, referring to the Django Python view file that you authored, and the function for Splunk Phantom to call when rendering your view.",
                                "type": "string",
                                "pattern": "^.+\\..+$"
                            },
                            "title": {
                                "description": "Specifies the title that is displayed within the widget header on the Investigation screen.",
                                "type": "string"
                            },
                            "menu_name": {
                                "description": "Specifies the name to be displayed in the widget menu on the Investigation screen when listing this widget.",
                                "type": "string"
                            }
                        }
                    },
                    "output": {
                        "description": "An array of results that are generated by this app. Each member of the array is one variable that matches the corresponding variable in the CommandResult class that the Python app code produces.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": ["data_type"],
                            "properties": {
                                "data_path": {
                                    "description": "Specifies the data path of this field. Data paths are a method of indexing into the JSON in an abstract fashion that allows others who want to access that data to do so by specifying the appropriate path. The data path specified here must be populated by the app code that creates and returns this field.",
                                    "type": "string"
                                },
                                "data_type": {
                                    "$ref": "#/definitions/data_type"
                                },
                                "contains": {
                                    "description": "Specifies what kind of content this field contains. The purpose of contains is to allow matching of output from one action to another action's parameters.",
                                    "type": "array"
                                },
                                "column_name": {
                                    "description": "If the output from this app is rendered in the default table widget, when render \"type\" is table, then column_name specifies the name of this column within the rendered widget when it is displayed. This is a convenient way to show data in Investigation and when viewer action results in tabular form.",
                                    "type": "string"
                                },
                                "column_order": {
                                    "description": "If the output from this app is to be rendered in the default table widget, when render \"type\" is table, then column_order specifies the order of this column. Column ordering starts at 0.",
                                    "type": "number"
                                },
                                "example_values": {
                                    "description": "A list of example values for the data path. These are displayed in the app's documentation page.",
                                    "type": "array"
                                },
                                "map_info": {
                                    "description": "If the output from this app is to be rendered in the default map widget, when render \"type\" is map, then map_info specifies the name of this field within the details for this item.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "configuration": {
            "description": "A set of asset configuration variables, defined in more detail in the following sections. Configuration can be empty if none are needed.",
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "required": [
                    "data_type",
                    "description"
                ],
                "properties": {
                    "data_type": {
                        "$ref": "#/definitions/data_type"
                    },
                    "description": {
                        "description": "A description of this variable. This value is used as a label that is displayed on the UI next to the input control. Keep this brief, preferably a single line, since it is displayed on the UI. If you need to explain the app, or asset configuration in more detail use a readme.html file.",
                        "type": "string"
                    },
                    "required": {
                        "description": "Whether or not the variable is mandatory. If mandatory, the variable must be configured by the user when defining an asset that this variable operates on.",
                        "type": "boolean",
                        "default": false
                    },
                    "value_list": {
                        "description": "To allow the user to choose from a pre-defined list of values displayed in a drop-down, specify them as a list. For example, [\"one\", \"two\", \"three\"]",
                        "type": "array"
                    },
                    "default": {
                        "description": "To set the default value of a variable in the UI, use this key. The user will be able to modify this value, so the app will need to validate it. This key also works in conjunction with value_list."
                    },
                    "order": {
                        "description": "The order key, starting at 0, allows the app author to control the display order of the controls in the UI.",
                        "type": "number"
                    }
                }
            }
        }
    }
}